#!/bin/bash
# based on DrSmyrke
#
# Any original DrSmyrke code is licensed under the BSD license
#
# All code written since the fork of DrSmyrke is licensed under the GPL
#
#
# Copyright (c) 2016 Prokofiev Y. <Smyrke2005@yandex.ru>
# All rights reserved.
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.
#
#
#
set -o nounset -o errexit
#if ! [ $1 ];then echo "Usage $0 -h";fi
case $1 in
	"-h")
	echo "Usage:	$0 <SCRIPT> ARGUMENTS"
	echo "Scripts:"
	echo "s1 - Current video driver"
	echo "s2 - View progress at dd"
	echo "s3 - Clear swap"
	echo "s4 - Your IP"
	echo "s5 - Ping wour LAN"
	echo "s6 - Streaming WebCam to Lan (http://localhost:port/1.ogv) <port>"
	echo "s7 - Add current user to group vboxusers"
	echo "s8 - Face control"
	echo "s9 - makeCasperRW <size> (default 280Mb)"
	echo "s10 - convert man page to pdf <command>"
	echo "s11 - view 1-100 percents"
	echo "s12 - check port open <host> <port>"
	echo "s13 - Password recovery root"
	echo "s14 - GRUB recovery"
	echo "s15 - decode HEX to UTF-8 <string>"
	echo "s16 - unlock USB GSM modem <unlock code> <device> #/dev/ttyUSB{0,1,2} #unlock code get http://a-zgsm.com/freecode/"
	echo "s17 - pstree"
	echo "s18 - screenCast"
	echo "s19 - screenCast NOSOUND"
	echo "s20 - write ISO image to USB flash"
	echo "s21 - CPU usage"
	echo "s22 - DISTRIBUTIVE info"
	echo "s23 - LED ScrollLock on/off"
	echo "s24 - Echo IP to name <IP>"
	echo "s25 - Enter password"
	echo "s26 - Current day"
	echo "s27 - Install DEV Packets"
	echo "s28 - Generate SSH RSA key in current folder"
	echo "s29 - Create 10Gb in ZIP File"
	echo "s30 - Endless launch of the team <COMMAND>"
	echo "s31 - SSH tunnel <LOCAL PORT> <REMOTE SERVER> <REMOTE PORT> <SSH SERVER CONNECT LINE>"
	echo "s32 - List all HDD & UUID"
	echo "s33 - Change bitVal for ~/.vine <32|64>"
    echo "s34 - Network activity"
	echo "s35 - "
	echo "s36 - "
	echo "s37 - "
	;;
	"s1")	grep -Eiwo -m1 'nvidia|amd|ati|intel' /var/log/Xorg.0.log	;;
	"s2")	watch -n 5 sudo killall -USR1 dd	;;
	"s3")	sudo swapoff -a && sudo swapon -a	;;
	"s4")
		MYIP=$(wget -O - -q http://drsmyrke-home.pskovline.ru/other/info/ip.php);
		echo $MYIP;
	;;
	"s5")
		echo -n "Enter IP range (192.168.1):"
		read range
		if ! [ $range ];then range="192.168.1";fi
		echo -n "Enter $range."
		read lsubrange
		if ! [ $lsubrange ];then lsubrange="0";fi
		echo -n "Enter IP subrange high $range.$lsubrange-"
		read hsubrange
		if ! [ $hsubrange ];then hsubrange="255";fi
		for ((i=$lsubrange; i<=$hsubrange; i++)); do
			status=$(ping "$range.$i" -c 1 2>/dev/null | grep "packet loss" | awk '{print $6}' | awk -F'%' '{print $1}');
			if [ "$status" = "0" ]; then echo -e "\e[1;32m$range.$i	OnLine\e[0m";fi
			if [ "$status" = "+1" ]; then echo -e "\e[1;31m$range.$i	OffLine\e[0m";fi
		done
	;;
	"s6")
		vlc -I dummy screen:// --sout "#transcode{vcodec=theo,vb=1200,scale=0,acodec=vorb,ab=128,fps=24}:standard{access=http,mux=ogg,dst=:$2/1.ogv}"
	;;
	"s7")	sudo usermod -a -G vboxusers $USER	;;
	"s8")
		cmd=$(date +\%Y-\%m-\%d-\%H-\%M-\%S)
		if [ ! -d "~/.FaceControl" ]; then mkdir ~/.FaceControl; fi;
		ffmpeg -f video4linux2 -s 640x480 -i /dev/video0 -f image2 "~/.FaceControl/$cmd.jpg"
	;;
	"s9")
		size=280
		if [ $2 ];then size=$2;fi
		sudo dd if=/dev/zero of=casper-rw bs=1M count=$size
		sudo mkfs.ext4 casper-rw
		#sudo mount casper-rw /tmp/temp -o loop
	;;
	"s10")	man -t $2 | ps2pdf - $2.pdf	;;
	"s11")	echo -n "percents -    "; for i in {1..100}; do sleep 0.1; echo -ne '\e[4D'; printf "% 3d%%" $i; done; echo	;;
	"s12")
		if [[ "$(echo "quit" | telnet $2 $3 2>/dev/null | grep 'Escape\ character' | wc -l)" -eq "1" ]]; then echo "OPEN"; else echo "CLOSED"; fi
	;;
	"s13")
		sudo fdisk -l
		echo "Enter the name of the partition (example: sda1):"
		read razd
		sudo mount /dev/$razd /mnt
		sudo chroot /mnt
		sudo passwd root
		exit
		sudo umount /mnt
	;;
	"s14")
		sudo fdisk -l
		echo "Enter the name of the partition (example: sda1):"
		read razd
		sudo mount /dev/$razd /mnt
		sudo grub-install --root-directory=/mnt /dev/$razd
		sudo update-grub --output=/mnt/boot/grub/grub.cfg
		sudo umount /mnt
	;;
	"s15")
		len=$(echo $2 | awk '{print length}' || echo -n $2 | wc -c || expr length $2);
		echo "===================="
		for ((i=0; i<$len; i+=2)); do
			echo -e -n "\x"${2:$i:2}
		done
		echo ""
	;;
	"s16")
		sudo su -c "echo -e 'AT^CARDLOCK=$2\r\n' >$3"
		#PS-1: Еще насколько полезных команд:
		#AT^U2DIAG=0 (режим "только модем")
		#AT^U2DIAG=1 (режим "модем + CD-ROM")
		#AT^U2DIAG=255 (режим "модем + CD-ROM + Card Reader")
		#AT^U2DIAG=256 (режим "модем + Card Reader")
	;;
	"s17")	ps fax	;;
	"s18")
		#vlc -I dummy screen:// --sout "#transcode{vcodec=theo,vb=1200,scale=0,acodec=vorb,ab=128,fps=24}:standard{access=http,mux=ogg,dst=:$port/1.ogv}"
		#pacmd list-sources | grep "name:"
		cvlc screen:// --screen-fps=25.000000 --input-slave=pulse://alsa_input.pci-0000_00_1b.0.analog-stereo --live-caching=300 --sout "#transcode{vcodec=h264,vb=7000,scale=1,acodec=mpga,ab=128,channels=2,samplerate=44100}:file{dst=$HOME/MyScreenCast.mp4}"
	;;
	"s19")
		cvlc screen:// --screen-fps=25.000000 --live-caching=300 --sout "#transcode{vcodec=h264,vb=5000,scale=1}:file{dst=$HOME/MyScreenCast.mp4}"
	;;
	"s20")	sudo mintstick -m iso	;;
	"s21")
	PREV_TOTAL=0
	PREV_IDLE=0
	while true; do
	CPU=(`cat /proc/stat | grep '^cpu '`) # Get the total CPU statistics.
	unset CPU[0]                          # Discard the "cpu" prefix.
	IDLE=${CPU[4]}                        # Get the idle CPU time.
	# Calculate the total CPU time.
	TOTAL=0
	for VALUE in "${CPU[@]}"; do
		let "TOTAL=$TOTAL+$VALUE"
	done
	# Calculate the CPU usage since we last checked.
	let "DIFF_IDLE=$IDLE-$PREV_IDLE"
	let "DIFF_TOTAL=$TOTAL-$PREV_TOTAL"
	let "DIFF_USAGE=(1000*($DIFF_TOTAL-$DIFF_IDLE)/$DIFF_TOTAL+5)/10"
	echo -en "\rCPU: $DIFF_USAGE%  \b\b"
	# Remember the total and idle CPU times for the next check.
	PREV_TOTAL="$TOTAL"
	PREV_IDLE="$IDLE"
	# Wait before checking again.
	sleep 1
	done
	;;
	"s22")
		cat /proc/version
		lsb_release -a
		cat /etc/*-release
	;;
	"s23")	for i in {1..100}; do xset led named "Scroll Lock" ;sleep 0.05 ;xset -led named "Scroll Lock"; sleep 0.05; done;	;;
	"s24")	net lookup $2	;;
	"s25")
		echo -n "Enter password: "
		stty -echo
		read password
		stty echo
		echo ""
		echo "Your password: [$password]"
	;;
	"s26")	calendar	;;
	"s27")
		sudo apt-get install qtcreator qt5-doc qttranslations5-l10n qttools5-dev-tools g++ gcc cmake mc qtbase5-dev git meld ghex dpkg debconf debhelper
		sudo apt-get install gcc-avr avrdude avr-libc
		sudo apt-get install gpxviewer openstreetmap-client
	;;
	"s28")	ssh-keygen -t rsa -b 4096 -f ./ssh-new_key-rsa	;;
	"s29")	dd if=/dev/zero bs=1M count=10240 | gzip > 10G.gzip	;;
	"s30")	while [ 1 ]; do $2; sleep 3; done;	;;
	"s31")	ssh -L 127.0.0.1:$1:$2:$3 $4	;;
	"s32")
		ls -l /dev/disk/by-uuid
		sudo blkid
	;;
	"s33")
		if [ $2 = "32" ];then
			rm -r ~/.wine
			WINEARCH=win32 WINEPREFIX=~/.wine winecfg
		fi
		if [ $2 = "64" ];then
			rm -r ~/.wine
			WINEARCH=win64 WINEPREFIX=~/.wine winecfg
		fi
	;;
	"s34")
		lsof -i
		sudo netstat -uplnt
	;;
	"s35")
	;;
	"s36")
	;;
	"s37")
	;;
esac



#############################################################
#if [ $1 = "s39" ];then
#	ssh $rUser@$rHomeServer -p $rPort "if [ -d $DIR ];then mkdir '$DIR/$date'; if [ -d $DIR/lastest ];then rm '$DIR/lastest'; fi; ln -s '$DIR/$date' '$DIR/lastest'; fi;"
#	rsyncCmd ~/bin $rUser@$rHomeServer:$DIR/lastest/
#	rsyncCmd ~/Docs $rUser@$rHomeServer:$DIR/lastest/
#	rsyncCmd ~/Desktop $rUser@$rHomeServer:$DIR/lastest/
#	notify-send "Sync" "complete"
#fi
#if [ $1 = "s40" ];then
#	rsyncCmd ~/ $rUser@$rHomeServer:$DIR/home/
#	notify-send "Sync" "complete"
#fi
#############################################################

exit 0
